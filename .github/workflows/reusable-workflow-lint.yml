name: Reusable Scan & Lint Workflow Files
on:
  workflow_call:

# Disable permissions for all available scopes by default.
# Any needed permissions should be configured individually for each job.
permissions: {}

jobs:
  # Runs yamllint to ensure that all YAML files are correctly formatted.
  #
  # Performs the following steps:
  # - Checks out the repository.
  # - Runs yamllint.
  yaml-lint:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
          show-progress: ${{ runner.debug == '1' && 'true' || 'false' }}

      - name: Lint yaml files
        uses: ibiqlik/action-yamllint@2576378a8e339169678f9939646ee3ee325e845c # v3.1.1
        with:
          config_data: >
            {
              extends: default,
              rules: {
                document-start: false,
                truthy: disable,
                line-length: disable,
                brackets: {
                  min-spaces-inside: 1,
                  max-spaces-inside: 1
                }
              }
            }

  # Runs the actionlint GitHub Action workflow file linter.
  #
  # This helps guard against common mistakes including strong type checking for expressions (${{ }}), security checks,
  # `run:` script checking, glob syntax validation, and more.
  #
  # Performs the following steps:
  # - Checks out the repository.
  # - Runs actionlint.
  actionlint:
    name: Actionlint
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    timeout-minutes: 5
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
          show-progress: ${{ runner.debug == '1' && 'true' || 'false' }}

      # actionlint is static checker for GitHub Actions workflow files.
      # See https://github.com/rhysd/actionlint.
      - name: Run actionlint
        uses: docker://rhysd/actionlint@sha256:887a259a5a534f3c4f36cb02dca341673c6089431057242cdc931e9f133147e9 # v1.7.7
        with:
          args: "-color -verbose"

  # Performs a security scan of GitHub Action workflow files using octoscan.
  #
  # octoscan is a static vulnerability scanner for GitHub Action workflows.
  #
  # Performs the following steps:
  # - Checks out the repository.
  # - Runs octoscan.
  # - Uploads a SARIF file to GitHub.
  octoscan:
    name: Octoscan
    runs-on: ubuntu-24.04
    permissions:
      security-events: write
      actions: read
      contents: read
    timeout-minutes: 10
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
          show-progress: ${{ runner.debug == '1' && 'true' || 'false' }}

      # Several rules are disable.
      # local-action: The sole purpose of this rule is to flag local action files because Octoscan cannot currently
      # parse them. However, this is not actually the case and results in unnecessary noise.
      # All other disabled rules are ones that are replicated in actionlint.
      - name: Run octoscan
        id: octoscan
        uses: synacktiv/action-octoscan@6b1cf2343893dfb9e5f75652388bd2dc83f456b0 # v1.0.0
        with:
          filter_triggers: ''
          disable_rules: 'dangerous-write,shellcheck,credentials,local-action'

      - name: Upload SARIF file to GitHub
        uses: github/codeql-action/upload-sarif@51f77329afa6477de8c49fc9c7046c15b9a4e79d # v3.29.5
        with:
          sarif_file: "${{steps.octoscan.outputs.sarif_output}}"
          category: octoscan

  # Performs a security scan of GitHub Action workflow files using Poutine.
  #
  # Poutine is a security scanner that detects misconfigurations and vulnerabilities in the build pipelines of a repository.
  #
  # Performs the following steps:
  # - Checks out the repository.
  # - Runs Poutine.
  # - Uploads a SARIF file to GitHub.
  poutine:
    name: Poutine
    runs-on: ubuntu-24.04
    permissions:
      security-events: write
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
          show-progress: ${{ runner.debug == '1' && 'true' || 'false' }}

      - name: Run Poutine
        uses: boostsecurityio/poutine-action@84c0a0d32e8d57ae12651222be1eb15351429228 # v0.15.2

      - name: Upload poutine SARIF file
        uses: github/codeql-action/upload-sarif@51f77329afa6477de8c49fc9c7046c15b9a4e79d # v3.29.5
        with:
          sarif_file: results.sarif
          category: poutine

  # Performs a scan of GitHub Action workflow files using zizmor.
  #
  # zizmor is a static analysis tool for GitHub Actions that can find many common security issues in typical setups.
  #
  # Performs the following steps:
  # - Checks out the repository.
  # - Runs the zizmor action that scans workflow files and uploads a SARIF file to GitHub.
  zizmor:
    name: zizmor
    runs-on: ubuntu-24.04
    permissions:
      security-events: write
      actions: read
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
          show-progress: ${{ runner.debug == '1' && 'true' || 'false' }}

      - name: Run zizmor
        uses: zizmorcore/zizmor-action@f52a838cfabf134edcbaa7c8b3677dde20045018 # v0.1.1

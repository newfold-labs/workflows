# A reusable workflow for automating and managing translation files.
#
# By default, this workflow will attempt to translate untranslated strings using the Azure AI translation service.
#
# This workflow assumes the following:
# - The calling repository has a `i18n`, `i18n-ci-pre`, `i18n-ci-post` in the `composer.json` file.
# - If there are additional scripts that must be run when processing translations for some reason, then the
#   `package.json` file must also contain the `i18n`, `i18n-ci-pre`, and `i18n-ci-post` scripts. They should run the
#   corresponding Composer scripts, plus any other necessary scripts.
#
name: Reusable Translation Workflow

on:
  workflow_call:
    inputs:
      text_domain:
        description: 'Text domain for translation'
        required: true
        type: string
      run-azure-ai-translate:
        description: 'Whether to run the Azure AI translation step'
        required: false
        type: boolean
        default: true
      i18n-script-location:
        description: 'Where i18n scripts should be run from. Valid values are "composer" and "npm".'
        required: false
        type: string
        default: 'composer'

    secrets:
      TRANSLATOR_API_KEY:
        required: true

# Disable permissions for all available scopes by default.
# Any needed permissions should be configured individually for each job.
permissions: {}

env:
  PR_BRANCH_NAME: 'auto-translate/${{ github.ref_name }}'

jobs:
  # This job works to ensure that the HEAD branch is present and up to date with the BASE branch.
  #
  # It handles the following situations:
  # - When a pull request already exists, `gh pr update branch` is run to pull in changes from BASE.
  # - When a pull request does not exist but the HEAD branch does, the HEAD branch is deleted and recreated to avoid conflicts.
  # - When both a pull request and the HEAD branch do not exist, a new fresh branch is created from BASE and published.
  #
  # If a HEAD branch for a pull request is deleted, the pull request is automatically closed.
  prepare-pr-branch:
    name: Prepare Pull Request Branch
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: read
    outputs:
      pr_found: ${{ steps.check_pr.outputs.found }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          persist-credentials: true

      - name: Check for an existing pull request
        id: check_pr
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          pr=$(gh pr list --state open --label 'translations' --base "$GITHUB_REF_NAME" --head "$PR_BRANCH_NAME" --json number --jq '.[0].number')
          if [ -n "$pr" ]; then
            echo "found=$pr" >> "$GITHUB_OUTPUT"
          else
            echo "found=false" >> "$GITHUB_OUTPUT"
          fi

      # When the branch already exists remotely without a corresponding pull request, it should be deleted to ensure
      # that the pull request can be cleanly merged with all changes from the `BASE` branch present.
      - name: Check if branch already exists remotely
        id: branch-check
        if: steps.check_pr.outputs.found == 'false'
        run: |
          if git ls-remote --exit-code --heads origin "$PR_BRANCH_NAME"; then
            echo "exists=true" >> "$GITHUB_OUTPUT"
          else
            echo "exists=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Update the HEAD branch of a pre-existing pull request
        if: steps.check_pr.outputs.found != 'false'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh pr update-branch --yes || echo "::notice::No new changes in $GITHUB_REF_NAME."

      - name: Delete an orphaned branch with no pull request
        if: steps.check_pr.outputs.found == 'false' && steps.branch-check.outputs.exists == 'true'
        run: git push origin --delete "$PR_BRANCH_NAME"

      - name: Create a new branch with recent changes from the BASE
        run: git checkout -B "$PR_BRANCH_NAME"

      - name: Publish the branch
        if: steps.check_pr.outputs.found == 'false'
        run: git push origin "$PR_BRANCH_NAME"

  # Ensures that all strings are accurately accounted for before performing any further translation steps.
  #
  # In order for missing strings to be translated, they must all be present in the POT and PO files.
  #
  # This job will:
  # - Check out the repository.
  # - Sets up PHP.
  # - Installs Composer dependencies.
  # - Sets up Node.js (if necessary).
  # - Installs npm dependencies (if necessary).
  # - Runs the `i18n-ci-pre` script to ensure that all strings are accounted for.
  # - Creates a diff file of the changes.
  # - Saves the diff file as an artifact for use in future steps.
  prepare-for-translation:
    name: Ensure the necessary components are updated
    runs-on: ubuntu-latest
    needs: [ 'prepare-pr-branch' ]
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          ref: ${{ env.PR_BRANCH_NAME }}
          persist-credentials: false

      - name: Set Up PHP
        uses: shivammathur/setup-php@9e72090525849c5e82e596468b86eb55e9cc5401 # v2.32.0
        with:
          php-version: "8.0"

      - name: Install Composer dependencies
        uses: ramsey/composer-install@3cf229dc2919194e9e36783941438d17239e8520 # v3.1.1
        with:
          composer-options: "--no-interaction --no-progress --prefer-dist"

      - name: Set up Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020  # v4.4.0
        if: inputs.i18n-script-location == 'npm'
        with:
          node-version-file: '.nvmrc'

      - name: Install Node.js dependencies
        if: inputs.i18n-script-location == 'npm'
        run: npm ci

      - name: Run i18n-ci-pre scripts
        env:
          SCRIPT_LOCATION: ${{ inputs.i18n-script-location == 'npm' && 'npm' || 'composer' }}
        run: $SCRIPT_LOCATION run i18n-ci-pre

      - name: Create a diff file
        run: |
          if ! git diff --quiet; then
            git diff > "$RUNNER_TEMP/updated-translations.diff"
          fi

      - name: Save patch as an artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: translations-${{ github.run_id }}
          path: ${{ runner.temp }}/updated-translations.diff
          retention-days: 7
          overwrite: true

  # Automatically translates untranslated strings using the Azure AI translation service.
  #
  # This job will:
  # - Check out the repository.
  # - Downloads the patch file from the previous step.
  # - Applies the patch file.
  # - Sets up Python.
  # - Installs Python dependencies.
  # - Downloads the Python translation script from the workflow repository.
  # - Translates PO and JSON files using the Azure AI translation service.
  # - Removes the downloaded translation script.
  # - Creates a diff file of the changes.
  # - Saves the diff file as an artifact for use in future steps.
  auto-translate-with-azure:
    name: Auto-Translate with Azure AI
    runs-on: ubuntu-latest
    needs: [ 'prepare-pr-branch', 'prepare-for-translation' ]
    if: inputs.run-azure-ai-translate
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          ref: ${{ env.PR_BRANCH_NAME }}
          persist-credentials: false

      - name: Check for a patch file
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # 4.3.0
        id: download-artifact
        continue-on-error: true
        with:
          name: translations-${{ github.run_id }}
          path: ${{ runner.temp }}

      - name: Apply the patch file
        if: steps.download-artifact.outcome == 'success'
        run: git apply "$RUNNER_TEMP/updated-translations.diff"

      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065  # v5.6.0
        with:
          python-version: '3.x'

      - name: Install Python dependencies
        run: pip install requests polib

      - name: Download translation scripts from workflow repository
        run: curl -o "$RUNNER_TEMP/translate.py" https://raw.githubusercontent.com/newfold-labs/workflows/refs/heads/main/.github/scripts/translate.py

      - name: Translate PO and JSON files
        env:
          TRANSLATOR_API_KEY: ${{ secrets.TRANSLATOR_API_KEY }}
          TEXT_DOMAIN: ${{ inputs.text_domain }}
        run: python "$RUNNER_TEMP/translate.py"

      - name: Remove downloaded translate script
        run: rm "$RUNNER_TEMP/translate.py"

      - name: Create a diff file
        run: |
          if ! git diff --quiet; then
            git diff > "$RUNNER_TEMP/updated-translations.diff"
          fi

      - name: Save patch as an artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: translations-${{ github.run_id }}
          path: ${{ runner.temp }}/updated-translations.diff
          retention-days: 7
          overwrite: true

    # Runs post-translation scripts to finalize the translation updates.
    #
    # After translating strings, the PHP and JSON files need to be generated to ensure WordPress can properly display
    # any newly translated strings.
    #
    # This job will:
    # - Check out the repository.
    # - Downloads the patch file from the previous step.
    # - Applies the patch file.
    # - Sets up PHP.
    # - Installs Composer dependencies.
    # - Sets up Node.js (if necessary).
    # - Installs npm dependencies (if necessary).
    # - Runs the `i18n-ci-post` script to ensure all translated strings are available.
    # - Creates a diff file of the changes.
    # - Saves the diff file as an artifact for use in future steps.
  process-translations:
    name: Runs scripts post-translation
    runs-on: ubuntu-latest
    needs: [ 'prepare-pr-branch', 'prepare-for-translation', 'auto-translate-with-azure' ]
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          ref: ${{ env.PR_BRANCH_NAME }}
          persist-credentials: false

      - name: Check for a patch file
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # 4.3.0
        id: download-artifact
        continue-on-error: true
        with:
          name: translations-${{ github.run_id }}
          path: ${{ runner.temp }}

      - name: Apply the patch file
        if: steps.download-artifact.outcome == 'success'
        run: git apply "$RUNNER_TEMP/updated-translations.diff"

      - name: Set Up PHP
        uses: shivammathur/setup-php@9e72090525849c5e82e596468b86eb55e9cc5401 # v2.32.0
        with:
          php-version: "8.0"

      - name: Install Composer dependencies
        uses: ramsey/composer-install@3cf229dc2919194e9e36783941438d17239e8520 # v3.1.1
        with:
          composer-options: "--no-interaction --no-progress --prefer-dist"

      - name: Set up Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020  # v4.4.0
        if: inputs.i18n-script-location == 'npm'
        with:
          node-version-file: '.nvmrc'

      - name: Install Node.js dependencies
        if: inputs.i18n-script-location == 'npm'
        run: npm ci

      - name: Run Post-CI i18n scripts
        env:
          SCRIPT_LOCATION: ${{ inputs.i18n-script-location == 'npm' && 'npm' || 'composer' }}
        run: $SCRIPT_LOCATION run i18n-ci-post

      - name: Add any new language files
        run: git add -A languages/

      - name: Create a diff file
        run: |
          if ! git diff --quiet; then
            git diff > "$RUNNER_TEMP/updated-translations.diff"
          else
            echo "::notice::No strings were missing from the POT or PO files."
          fi

      - name: Save new patch as an artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: translations-${{ github.run_id }}
          path: ${{ runner.temp }}/updated-translations.diff
          retention-days: 7
          overwrite: true

  # Manages the pull request for translation updates.
  #
  # When a pull request already exists, the new changes are pushed to the existing HEAD branch.
  #
  # This job will:
  # - Check out the repository.
  # - Downloads the patch file from the previous step.
  # - Stops the workflow run when no patch file is found.
  # - Sets up Node.js (if necessary).
  # - Applies the patch file to the HEAD branch.
  # - Configures the Git identity.
  # - Stages all changes, including new, untracked files.
  # - Commits the staged changes.
  # - Pushes the changes to the HEAD branch.
  # - Creates a new pull request or notes which one was updated.
  create-translation-pr:
    name: Create a Pull Request for Translation Updates
    runs-on: ubuntu-latest
    needs: [ 'prepare-pr-branch', 'prepare-for-translation', 'auto-translate-with-azure', 'process-translations' ]
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          ref: ${{ env.PR_BRANCH_NAME }}
          persist-credentials: true

      - name: Check for a patch file
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # 4.3.0
        id: download-artifact
        continue-on-error: true
        with:
          name: translations-${{ github.run_id }}
          path: ${{ runner.temp }}

      - name: Stop the workflow run when no patch is found
        run: |
          if [ ! -s "$RUNNER_TEMP/updated-translations.diff" ]; then
            echo "::notice::There are no translation updates to commit."
            exit 0
          fi

      - name: Apply the patch file
        run: git apply "$RUNNER_TEMP/updated-translations.diff"

      - name: Configure Git identity
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

      - name: Stage changes
        run: git add -A

      - name: Commit changes
        run: git commit -m "Apply all automated translation updates."

      - name: Push changes
        run: git push origin "$PR_BRANCH_NAME"

      - name: Display updated pull request information
        if: needs.prepare-pr-branch.outputs.pr_found != 'false'
        env:
          PR_NUMBER: ${{ needs.prepare-pr-branch.outputs.pr_found }}
        run: echo "::notice::Changes pushed to existing pull request https://github.com/${{ github.repository }}/pull/$PR_NUMBER."

      - name: Create Pull Request
        if: needs.prepare-pr-branch.outputs.pr_found == 'false'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_BODY="$({
            echo "This pull request contains automatic translations of PO and JSON files."
            echo ""
            echo "The workflow run responsible for creating this pull request can be found [here](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})."
          })"

          PR_URL=$(gh pr create \
            --title "Updating translation files" \
            --body "$PR_BODY" \
            --base "$GITHUB_REF_NAME" \
            --head "$PR_BRANCH_NAME" \
            --label "translations")

          echo "::notice::Created new pull request: $PR_URL."

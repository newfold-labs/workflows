name: Reusable Azure AI Translations

on:
  workflow_call:
    inputs:
      text_domain:
        description: 'Text domain for translation'
        required: true
        type: string

    secrets:
      TRANSLATOR_API_KEY:
        required: true

permissions: {}

jobs:
  auto-translate:
    name: Auto-Translate and Create PR
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    env:
      PR_BRANCH_NAME: 'auto-translate/${{ github.ref_name }}'

    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          persist-credentials: true

      - name: Check for an existing pull request
        id: check_pr
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          pr=$(gh pr list --state open --label 'translations' --base "$GITHUB_REF_NAME" --head "$PR_BRANCH_NAME" --json number --jq '.[0].number')
          if [ -n "$pr" ]; then
            echo "found=$pr" >> "$GITHUB_OUTPUT"
          else
            echo "found=false" >> "$GITHUB_OUTPUT"
          fi

      # When the branch already exists remotely without a corresponding pull request, it should be deleted to ensure
      # that the pull request can be cleanly merged with all changes from the `BASE` branch present.
      - name: Check if branch already exists remotely
        id: branch-check
        if: steps.check_pr.outputs.found == 'false'
        run: |
          if git ls-remote --exit-code --heads origin "$PR_BRANCH_NAME"; then
            echo "exists=true" >> "$GITHUB_OUTPUT"
          else
            echo "exists=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Delete the preexisting remote branch
        if: steps.check_pr.outputs.found == 'false' && steps.branch-check.outputs.exists == 'true'
        run: git push origin --delete "$PR_BRANCH_NAME"

      - name: Create or switch to pull request branch
        run: git checkout -B "$PR_BRANCH_NAME"

      - name: Update the HEAD branch of the pull request
        if: steps.check_pr.outputs.found != 'false'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh pr update-branch --yes || echo "::notice::No new changes in $GITHUB_REF_NAME."

      - name: Pull any changes from origin
        if: steps.check_pr.outputs.found != 'false'
        run: git pull

      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065  # v5.6.0
        with:
          python-version: '3.x'

      - name: Install Python dependencies
        run: pip install requests polib

      - name: Download translation scripts from workflow repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          repository: 'newfold-labs/workflows'
          path: 'translation-action-scripts'
          sparse-checkout: '.github/scripts/translate.py'
          sparse-checkout-cone-mode: false
          persist-credentials: false

      - name: Translate PO and JSON files
        env:
          TRANSLATOR_API_KEY: ${{ secrets.TRANSLATOR_API_KEY }}
          TEXT_DOMAIN: ${{ inputs.text_domain }}
        run: python translation-action-scripts/.github/scripts/translate.py

      - name: Remove translation scripts
        run: rm -rf translation-action-scripts

      - name: Check for changes to versioned files
        id: versioned-files-check
        run: |
          if git diff --quiet; then
            echo "uncommitted_changes=false" >> "$GITHUB_OUTPUT"
          else
            echo "uncommitted_changes=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Configure Git identity
        if: steps.versioned-files-check.outputs.uncommitted_changes == 'true'
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

      - name: Stage changes
        if: steps.versioned-files-check.outputs.uncommitted_changes == 'true'
        run: git add .

      - name: Commit changes
        if: steps.versioned-files-check.outputs.uncommitted_changes == 'true'
        run: git commit -m "Auto-translated PO and JSON files"

      - name: Push changes
        if: steps.versioned-files-check.outputs.uncommitted_changes == 'true'
        run: git push origin "$PR_BRANCH_NAME"

      - name: Display updated pull request information
        if: steps.check_pr.outputs.found != 'false' && steps.versioned-files-check.outputs.uncommitted_changes == 'true'
        run: echo "::notice::Changes pushed to existing pull request https://github.com/${{ github.repository }}/pull/${{ steps.check_pr.outputs.found }}."

      - name: Create Pull Request
        if: steps.check_pr.outputs.found == 'false' && steps.versioned-files-check.outputs.uncommitted_changes == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_BODY="$({
            echo "This pull request contains automatic translations of PO and JSON files."
            echo ""
            echo "The workflow run responsible for creating this pull request can be found [here](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})."
          })"

          PR_URL=$(gh pr create \
            --title "Updating translation files" \
            --body "$PR_BODY" \
            --base "$GITHUB_REF_NAME" \
            --head "$PR_BRANCH_NAME" \
            --label "translations")

          echo "::notice::Created new pull request: $PR_URL."

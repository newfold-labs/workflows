name: Reusable Azure AI Translations

on:
  workflow_call:
    inputs:
      text_domain:
        description: 'Text domain for translation'
        required: true
        type: string
      pr_branch_name:
        description: 'Base branch name to create translation PR against'
        required: false
        default: 'main'
        type: string

    secrets:
      TRANSLATOR_API_KEY:
        required: true
      NEWFOLD_ACCESS_TOKEN:
        required: true

permissions: {}

jobs:
  auto-translate:
    name: Auto-Translate and Create PR
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          persist-credentials: false

      - name: Check for existing translations PR and exit if found
        id: check_pr
        env:
          GH_TOKEN: ${{ secrets.NEWFOLD_ACCESS_TOKEN }}
        run: |
          prs=$(gh pr list --state open --label 'translations' --json number --jq '.[].number')
          if [ -n "$prs" ]; then
            echo 'A PR with "translations" label already exists:'
            echo "$prs"
            echo "found=true" >> "$GITHUB_OUTPUT"
          else
            echo 'No existing "translations" PR found. Continuing workflow.'
            echo "found=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Set up Python
        if: steps.check_pr.outputs.found == 'false'
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065  # v5.6.0
        with:
          python-version: '3.x'

      - name: Install Python dependencies
        if: steps.check_pr.outputs.found == 'false'
        run: |
          pip install requests polib

      - name: Set branch name
        if: steps.check_pr.outputs.found == 'false'
        id: vars
        env:
          PR_BRANCH_NAME: ${{ inputs.pr_branch_name }}
        run: echo "BRANCH=auto-translate/$PR_BRANCH_NAME" >> "$GITHUB_OUTPUT"

      - name: Download translate.py to temp directory
        if: steps.check_pr.outputs.found == 'false'
        run: |
          mkdir -p "$RUNNER_TEMP/_temp"
          git clone --filter=blob:none --sparse https://github.com/newfold-labs/workflows.git "$RUNNER_TEMP/_temp/workflows"
          cd "$RUNNER_TEMP/_temp/workflows"
          git sparse-checkout set .github/scripts
          cp .github/scripts/translate.py "$RUNNER_TEMP/_temp/translate.py"

      - name: Translate PO and JSON files
        if: steps.check_pr.outputs.found == 'false'
        env:
          TRANSLATOR_API_KEY: ${{ secrets.TRANSLATOR_API_KEY }}
          TEXT_DOMAIN: ${{ inputs.text_domain }}
        run: python "$RUNNER_TEMP/_temp/translate.py"

      - name: Get human-readable datetime
        id: datetime
        run: echo "timestamp=$(date -u '+%B %d, %Y at %H:%M UTC')" >> "$GITHUB_OUTPUT"

      - name: Create Pull Request to update translations
        if: steps.check_pr.outputs.found == 'false'
        env:
          GH_TOKEN: ${{ secrets.NEWFOLD_ACCESS_TOKEN }}
          BRANCH_NAME: ${{ steps.vars.outputs.BRANCH }}
          TIMESTAMP: ${{ steps.datetime.outputs.timestamp }}
        run: |
          # Configure Git identity
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

          # Ensure remote uses token for Git push
          git remote set-url origin https://x-access-token:${GH_TOKEN}@github.com/${{ github.repository }}.git

          # Create or reset to the branch
          git checkout -B "$BRANCH_NAME"

          # Stage changes
          git add .
          if git diff --cached --quiet; then
            echo "No changes to commit. Skipping PR creation."
            exit 0
          fi

          # Commit and push (gh auth will handle credentials)
          git commit -m "Auto-translated PO and JSON files"
          git push --force origin "$BRANCH_NAME"

          # Build PR body
          PR_BODY="$({
            echo "This pull request contains automatic translations of PO and JSON files."
            echo ""
            echo "The workflow run responsible for creating this pull request can be found [here](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})."
          })"

          # Create PR using GitHub CLI
          gh pr create \
            --title "Updating translation files on ${TIMESTAMP}" \
            --body "$PR_BODY" \
            --base "${{ github.event.repository.default_branch }}" \
            --head "$BRANCH_NAME" \
            --label "translations"
